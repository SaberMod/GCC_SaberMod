# Copyright (C) 2014-2015 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# GCC testsuite that uses the `dg.exp' driver.

# Exit immediately if this isn't an ARM or AArch64 target.
if {![istarget arm*-*-*]
    && ![istarget aarch64*-*-*]} then {
  return
}

# Load support procs.
load_lib gcc-dg.exp

# Initialize `dg'.
load_lib c-torture.exp
load_lib target-supports.exp
load_lib torture-options.exp

dg-init

if {[istarget arm*-*-*]
    && ![check_effective_target_arm_neon_ok]} then {
  return
}

torture-init
set-torture-options $C_TORTURE_OPTIONS {{}} $LTO_TORTURE_OPTIONS

# Make sure Neon flags are provided, if necessary.
set additional_flags [add_options_for_arm_neon ""]

# Main loop.
foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {
    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $src] then {
	continue
    }

    # runtest_file_p is already run above, and the code below can run
    # runtest_file_p again, make sure everything for this test is
    # performed if the above runtest_file_p decided this runtest
    # instance should execute the test
    gcc_parallel_test_enable 0
    c-torture-execute $src $additional_flags
    gcc-dg-runtest $src "" $additional_flags
    gcc_parallel_test_enable 1
}

# All done.
torture-finish
dg-finish
